version: '3.7'

services:
  admin-api:
    image: admin-api
    container_name: admin-api
    build:
      context: .
      dockerfile: Dockerfile.AdminApi
    ports:
      - "8030:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - main

  chats:
    image: chats
    container_name: chats
    build:
      context: .
      dockerfile: Dockerfile.Chats
    ports:
      - "8031:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development

  identity:
    image: identity
    container_name: identity
    build:
      context: .
      dockerfile: Dockerfile.Identity
    ports:
      - "8032:80"
    networks:
      - main
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
  
  sciences:
    image: sciences
    container_name: sciences
    environment:
      - ConnectionStrings__SciencesDb=Server=sciences_db;Port=5432;Database=sciences_db;User Id=postgres;Password=postgres;
    build:
      context: .
      dockerfile: Dockerfile.Sciences
    ports:
      - "8033:80"
    depends_on:
      - sciences_db
    networks:
      - main
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
  
  sciences_db:
    image: postgres:latest
    container_name: sciences_db
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - sciences_db_data:/var/lib/postgresql/data/
    networks:
      - main

  student-api:
    image: student-api
    container_name: student-api
    build:
      context: .
      dockerfile: Dockerfile.StudentApi
    ports:
      - "8034:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development

  students:
    image: students
    container_name: students
    build:
      context: .
      dockerfile: Dockerfile.Students
    ports:
      - "8035:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development

volumes:
  sciences_db_data:

networks:
  main: